name: Publish to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: simple-webapp
  GHCR_REPO: ${{ github.repository_owner }}/simple-webapp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.GHCR_REPO }}
          tags: |
            type=sha,format=short,prefix=sha-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./apps/simple-webapp
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_SHA=${{ github.sha }}

      # Stetch goal, so we verify that the image truly came from my GitHub Actions workflow (Kyverno)
      - name: Generate provenance attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.GHCR_REPO }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Show digest (use this in GitOps)
        run: |
          echo "Pushed: ${{ env.REGISTRY }}/${{ env.GHCR_REPO }}@${{ steps.build.outputs.digest }}"

      - name: Run basic tests
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.GHCR_REPO }}@${{ steps.build.outputs.digest }} \
            curl -f http://localhost:8000/health || exit 1

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.GHCR_REPO }}@${{ steps.build.outputs.digest }}
          format: table
          exit-code: 1
          ignore-unfixed: true

      - name: Update values.yaml with digest
        run: |
          sed -i "s|digest:.*|digest: \"${{ steps.build.outputs.digest }}\"|" ./gitops/helm/simple-webapp/values.yaml

      - name: Commit and push updated digest
        run: |
          git config user.name "ytnegmas"
          git config user.email "ytnegmas@gmail.com"
          git add ./gitops/helm/simple-webapp/values.yaml
          git commit -m "Update simple-webapp digest to ${{ steps.build.outputs.digest }}"
          git push
